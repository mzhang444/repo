/*
* jQuery UI Tag-it!
*
* @version v2.0 (06/2011)
*
* Copyright 2011, Levy Carneiro Jr.
* Released under the MIT license.
* http://aehlke.github.com/tag-it/LICENSE
*
* Homepage:
*   http://aehlke.github.com/tag-it/
*
* Authors:
*   Levy Carneiro Jr.
*   Martin Rehfeld
*   Tobias Schmidt
*   Skylar Challand
*   Alex Ehlke
*
* Maintainer:
*   Alex Ehlke - Twitter: @aehlke
*
* Dependencies:
*   jQuery v1.4+
*   jQuery UI v1.8+
*/

(function(e){e.widget("ui.tagit",{options:{allowDuplicates:!1,caseSensitive:!0,fieldName:"tags",placeholderText:null,readOnly:!1,removeConfirmation:!1,tagLimit:null,availableTags:[],autocomplete:{},showAutocompleteOnFocus:!1,allowSpaces:!1,singleField:!1,singleFieldDelimiter:",",singleFieldNode:null,animate:!0,tabIndex:null,beforeTagAdded:null,afterTagAdded:null,beforeTagRemoved:null,afterTagRemoved:null,onTagClicked:null,onTagLimitExceeded:null,onTagAdded:null,onTagRemoved:null,tagSource:null},_create:function(){var t=this;this.element.is("input")?(this.tagList=e("<ul></ul>").insertAfter(this.element),this.options.singleField=!0,this.options.singleFieldNode=this.element,this.element.css("display","none")):this.tagList=this.element.find("ul, ol").andSelf().last(),this.tagInput=e('<input type="text" />').addClass("ui-widget-content"),this.options.readOnly&&this.tagInput.attr("disabled","disabled"),this.options.tabIndex&&this.tagInput.attr("tabindex",this.options.tabIndex),this.options.placeholderText&&this.tagInput.attr("placeholder",this.options.placeholderText),this.options.autocomplete.source||(this.options.autocomplete.source=function(t,n){var r=t.term.toLowerCase(),i=e.grep(this.options.availableTags,function(e){return e.toLowerCase().indexOf(r)===0});this.options.allowDuplicates||(i=this._subtractArray(i,this.assignedTags())),n(i)}),this.options.showAutocompleteOnFocus&&(this.tagInput.focus(function(e,n){t._showAutocomplete()}),typeof this.options.autocomplete.minLength=="undefined"&&(this.options.autocomplete.minLength=0)),e.isFunction(this.options.autocomplete.source)&&(this.options.autocomplete.source=e.proxy(this.options.autocomplete.source,this)),e.isFunction(this.options.tagSource)&&(this.options.tagSource=e.proxy(this.options.tagSource,this)),this.tagList.addClass("tagit").addClass("ui-widget ui-widget-content ui-corner-all").append(e('<li class="tagit-new"></li>').append(this.tagInput)).click(function(n){var r=e(n.target);if(r.hasClass("tagit-label")){var i=r.closest(".tagit-choice");i.hasClass("removed")||t._trigger("onTagClicked",n,{tag:i,tagLabel:t.tagLabel(i)})}else t.tagInput.focus()});var n=!1;if(this.options.singleField)if(this.options.singleFieldNode){var r=e(this.options.singleFieldNode),i=r.val().split(this.options.singleFieldDelimiter);r.val(""),e.each(i,function(e,r){t.createTag(r,null,!0),n=!0})}else this.options.singleFieldNode=e('<input type="hidden" style="display:none;" value="" name="'+this.options.fieldName+'" />'),this.tagList.after(this.options.singleFieldNode);n||this.tagList.children("li").each(function(){e(this).hasClass("tagit-new")||(t.createTag(e(this).text(),e(this).attr("class"),!0),e(this).remove())}),this.tagInput.keydown(function(n){if(n.which==e.ui.keyCode.BACKSPACE&&t.tagInput.val()===""){var r=t._lastTag();!t.options.removeConfirmation||r.hasClass("remove")?t.removeTag(r):t.options.removeConfirmation&&r.addClass("remove ui-state-highlight")}else t.options.removeConfirmation&&t._lastTag().removeClass("remove ui-state-highlight");if(n.which===e.ui.keyCode.COMMA||n.which===e.ui.keyCode.ENTER||n.which==e.ui.keyCode.TAB&&t.tagInput.val()!==""||n.which==e.ui.keyCode.SPACE&&t.options.allowSpaces!==!0&&(e.trim(t.tagInput.val()).replace(/^s*/,"").charAt(0)!='"'||e.trim(t.tagInput.val()).charAt(0)=='"'&&e.trim(t.tagInput.val()).charAt(e.trim(t.tagInput.val()).length-1)=='"'&&e.trim(t.tagInput.val()).length-1!==0))(n.which!==e.ui.keyCode.ENTER||t.tagInput.val()!=="")&&n.preventDefault(),t.tagInput.data("autocomplete-open")||t.createTag(t._cleanedInput())}).blur(function(e){t.tagInput.data("autocomplete-open")||t.createTag(t._cleanedInput())});if(this.options.availableTags||this.options.tagSource||this.options.autocomplete.source){var s={select:function(e,n){return t.createTag(n.item.value),!1}};e.extend(s,this.options.autocomplete),s.source=this.options.tagSource||s.source,this.tagInput.autocomplete(s).bind("autocompleteopen",function(e,n){t.tagInput.data("autocomplete-open",!0)}).bind("autocompleteclose",function(e,n){t.tagInput.data("autocomplete-open",!1)})}},_cleanedInput:function(){return e.trim(this.tagInput.val().replace(/^"(.*)"$/,"$1"))},_lastTag:function(){return this.tagList.find(".tagit-choice:last:not(.removed)")},_tags:function(){return this.tagList.find(".tagit-choice:not(.removed)")},assignedTags:function(){var t=this,n=[];return this.options.singleField?(n=e(this.options.singleFieldNode).val().split(this.options.singleFieldDelimiter),n[0]===""&&(n=[])):this._tags().each(function(){n.push(t.tagLabel(this))}),n},_updateSingleTagsField:function(t){e(this.options.singleFieldNode).val(t.join(this.options.singleFieldDelimiter)).trigger("change")},_subtractArray:function(t,n){var r=[];for(var i=0;i<t.length;i++)e.inArray(t[i],n)==-1&&r.push(t[i]);return r},tagLabel:function(t){return this.options.singleField?e(t).find(".tagit-label:first").text():e(t).find("input:first").val()},_showAutocomplete:function(){this.tagInput.autocomplete("search","")},_findTagByLabel:function(t){var n=this,r=null;return this._tags().each(function(i){if(n._formatStr(t)==n._formatStr(n.tagLabel(this)))return r=e(this),!1}),r},_isNew:function(e){return!this._findTagByLabel(e)},_formatStr:function(t){return this.options.caseSensitive?t:e.trim(t.toLowerCase())},_effectExists:function(t){return Boolean(e.effects&&(e.effects[t]||e.effects.effect&&e.effects.effect[t]))},createTag:function(t,n,r){var i=this;t=e.trim(t),this.options.preprocessTag&&(t=this.options.preprocessTag(t));if(t==="")return!1;if(!this.options.allowDuplicates&&!this._isNew(t)){var s=this._findTagByLabel(t);return this._trigger("onTagExists",null,{existingTag:s,duringInitialization:r})!==!1&&this._effectExists("highlight")&&s.effect("highlight"),!1}if(this.options.tagLimit&&this._tags().length>=this.options.tagLimit)return this._trigger("onTagLimitExceeded",null,{duringInitialization:r}),!1;var o=e(this.options.onTagClicked?'<a class="tagit-label"></a>':'<span class="tagit-label"></span>').text(t),u=e("<li></li>").addClass("tagit-choice ui-widget-content ui-state-default ui-corner-all").addClass(n).append(o);if(this.options.readOnly)u.addClass("tagit-choice-read-only");else{u.addClass("tagit-choice-editable");var a=e("<span></span>").addClass("ui-icon ui-icon-close"),f=e('<a><span class="text-icon">Ã—</span></a>').addClass("tagit-close").append(a).click(function(e){i.removeTag(u)});u.append(f)}if(!this.options.singleField){var l=o.html();u.append('<input type="hidden" style="display:none;" value="'+l+'" name="'+this.options.fieldName+'" />')}if(this._trigger("beforeTagAdded",null,{tag:u,tagLabel:this.tagLabel(u),duringInitialization:r})===!1)return;if(this.options.singleField){var c=this.assignedTags();c.push(t),this._updateSingleTagsField(c)}this._trigger("onTagAdded",null,u),this.tagInput.val(""),this.tagInput.parent().before(u),this._trigger("afterTagAdded",null,{tag:u,tagLabel:this.tagLabel(u),duringInitialization:r}),this.options.showAutocompleteOnFocus&&!r&&setTimeout(function(){i._showAutocomplete()},0)},removeTag:function(t,n){n=typeof n=="undefined"?this.options.animate:n,t=e(t),this._trigger("onTagRemoved",null,t);if(this._trigger("beforeTagRemoved",null,{tag:t,tagLabel:this.tagLabel(t)})===!1)return;if(this.options.singleField){var r=this.assignedTags(),i=this.tagLabel(t);r=e.grep(r,function(e){return e!=i}),this._updateSingleTagsField(r)}if(n){t.addClass("removed");var s=this._effectExists("blind")?["blind",{direction:"horizontal"},"fast"]:["fast"],o=this;s.push(function(){t.remove(),o._trigger("afterTagRemoved",null,{tag:t,tagLabel:o.tagLabel(t)})}),t.fadeOut("fast").hide.apply(t,s).dequeue()}else t.remove(),this._trigger("afterTagRemoved",null,{tag:t,tagLabel:this.tagLabel(t)})},removeTagByLabel:function(e,t){var n=this._findTagByLabel(e);if(!n)throw"No such tag exists with the name '"+e+"'";this.removeTag(n,t)},removeAll:function(){var e=this;this._tags().each(function(t,n){e.removeTag(n,!1)})}})})(jQuery);