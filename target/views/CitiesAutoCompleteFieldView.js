define(["ember","utils/utils","tagit"],function(e,t){var n=e.View.extend({classNames:["percentWidth90"],tagName:"ul",stringsHaveSameBeginning:function(e,t){return e.toLowerCase().indexOf(t.toLowerCase())?!1:!0},filterData:function(e,t){var n=this,r;return r=$.map(e,function(e){if(n.stringsHaveSameBeginning(e.city,t))return{value:e.city,label:e.city+" - "+e.country}}),r},didInsertElement:function(){var e=this;this.$().tagit({placeholderText:e.get("placeHolder"),autocomplete:{source:function(t,n){var r=e.get("geoData"),i;r.length&&(i=e.filterData(r,t.term),n(i))},minLength:1},afterTagAdded:function(t,n){if(!n.duringInitialization){var r=e.get("geoData"),i=r.map(function(e){return e.city}),s=i.length===0,o=!e.get("value")||e.get("value")===n.tagLabel?!1:!0,u=$.inArray(n.tagLabel,i)===-1,a=!(s||u||o),f,l;if(a){for(f=0,l=e.get("geoData").length;f<l;f++)if(r[f].city===n.tagLabel){e.get("controller").send("updateLocationInfo",r[f]);break}e.set("value",n.tagLabel)}else n.tag.parent().tagit("removeTagByLabel",n.tagLabel)}},afterTagRemoved:function(t,n){n.tagLabel===e.get("value")&&e.set("value","")}}),this.get("value")&&this.$().tagit("createTag",this.get("value"))}});return n});